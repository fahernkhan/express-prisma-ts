name: Deploy Express + Prisma

on:
  push:
    branches: [ master ]

jobs:
  build-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/express-prisma-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: [build-push]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Prepare SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/ec2_key
          chmod 600 ~/.ssh/ec2_key
          ssh-keyscan ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Transfer files
        run: |
          scp -i ~/.ssh/ec2_key \
            -o StrictHostKeyChecking=no \
            docker-compose.prod.yml \
            ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/app/

      - name: Execute deployment
        run: |
          ssh -i ~/.ssh/ec2_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} <<EOF
          cd /app
          cat > .env <<EOL
          DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}
          DATABASE_URL=postgresql://${{ secrets.DB_USER}}:${{ secrets.DB_PASSWORD }}@postgres:5432/${{ secrets.DB_NAME}}?schema=public
          DB_NAME=${{ secrets.DB_NAME}}
          DB_USER=${{ secrets.DB_USER}}
          DB_PASSWORD=${{ secrets.DB_PASSWORD}}
          NODE_ENV=production
          PORT=3000
          EOL
          
          # Perintah yang diperbaiki
          docker compose -f docker-compose.prod.yml pull
          docker compose -f docker-compose.prod.yml down
          docker compose -f docker-compose.prod.yml up -d
          sleep 20
          docker exec express-prisma-app npx prisma migrate deploy
          EOF