name: CI/CD Pipeline

on:
  push:
    branches: [main]

env:
  APP_NAME: express-prisma-ts
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}

jobs:
  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U test -d test"
          --health-interval 5s
          --health-timeout 2s
          --health-retries 10
          -p 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
    
    - name: Install dependencies
      run: npm ci
      
    - name: Verify DB Connection
      timeout-minutes: 2
      env:
        DATABASE_URL: postgresql://test:test@localhost:5432/test
      run: |
        # Install psql client
        sudo apt-get update && sudo apt-get install -y postgresql-client
        
        # Wait for database with retry
        for i in {1..10}; do
          pg_isready -h localhost -U test -d test && break
          echo "Attempt $i failed. Retrying in 3 seconds..."
          sleep 3
        done
        
        # Final check
        psql $DATABASE_URL -c "SELECT version()"

    - name: Run tests
      env:
        DATABASE_URL: postgresql://test:test@localhost:5432/test
      run: |
        npx prisma migrate dev --name init
        npm test

  build-and-push:
    needs: unit-tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ env.DOCKERHUB_USERNAME }}/${{ env.APP_NAME }}:latest
          ${{ env.DOCKERHUB_USERNAME }}/${{ env.APP_NAME }}:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.AWS_HOST }}
        username: ubuntu
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          docker pull ${{ env.DOCKERHUB_USERNAME }}/${{ env.APP_NAME }}:latest
          docker stop app || true
          docker rm app || true
          docker run -d \
            --name app \
            -p 3000:3000 \
            -e DATABASE_URL="${{ secrets.DATABASE_URL }}" \
            ${{ env.DOCKERHUB_USERNAME }}/${{ env.APP_NAME }}:latest
          sleep 10
          docker exec app npx prisma migrate deploy

    - name: Smoke Test
      run: |
        curl -X POST -H "Content-Type: application/json" -d '{"name":"smoke-test","price":1000}' \
          --retry 3 --retry-delay 5 --fail-with-body \
          http://${{ secrets.AWS_HOST }}:3000/api/v1/item
        
        curl --fail --retry 3 --retry-delay 5 \
          http://${{ secrets.AWS_HOST }}:3000/api/v1/item